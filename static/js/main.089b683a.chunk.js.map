{"version":3,"sources":["reducers/gameReducer.js","reducers/index.js","actions/types.js","store.js","actions/gameActions.js","components/Icon.js","components/Actions.js","components/Stats.js","components/Modal.js","components/Form.js","components/GameOverlay.js","components/TableCell.js","components/TableRow.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["initialState","matrix","gameOver","combineReducers","game","state","action","type","payload","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","updateMatrix","content","updateGameStatus","status","iconStyle","width","Icons","name","src","process","alt","style","actionsStyle","display","headerButtonStyle","backgroundColor","border","appearance","padding","cursor","position","zIndex","marginTop","Actions","showSettings","showStats","closeModal","displaySettings","displayStats","iconClose","Icon","onClick","lineStyle","marginBottom","textAlign","valueStyle","fontSize","resetButtonStyle","color","Stats","resetData","playedGames","JSON","parse","localStorage","getItem","wonGames","value","percent","lostGames","won","Math","round","lost","modalOverlayStyle","top","left","right","bottom","contentModalStyle","justifyContent","borderRadius","transform","buttonStyle","Modal","children","showModal","modalStyle","Form","props","handleChange","bind","e","this","className","infoFormStyle","infoFormLabelStyle","pattern","nbRows","onChange","inputStyle","nbColumns","min","max","nbBombs","Component","margin","marginLeft","alignItems","marginRight","gameOverlayStyle","flexDirection","h2Style","flex","GameOverlay","resetGame","role","aria-label","TableCell","animated","handleClick","handleButtonPress","handleButtonRelease","preventDefault","coords","infos","marked","toggleMarkTile","showTile","bomb","displayAll","setItem","stringify","buttonPressTimer","setTimeout","clearTimeout","console","log","map","r","c","showed","nbLeftTiles","rowIndex","colIndex","counter","lineHeight","minWidth","height","userSelect","animatedClass","suggestedClass","suggested","getCellStyle","onContextMenu","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onMouseLeave","mapDispatchToProps","connect","TableRow","tableCells","row","columns","i","length","push","key","rowStyle","Table","tableRows","table","tableContainerStyle","remainingStyle","scrollableTableStyle","tableStyle","maxWidth","overflowX","borderCollapse","App","resetBombs","event","setState","target","parseInt","location","reload","removeItem","bombsCoords","maxAuthorizedBombs","found","floor","random","filter","bc","j","suggestedTiles","selectedSuggestedTile","gameOverlay","appStyle","href","rel","linkStyle","id","reloadApp","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","Promise","resolve","reject","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","checkValidServiceWorker","ReactDOM","render"],"mappings":"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","file":"static/js/main.089b683a.chunk.js","sourcesContent":["import { UPDATE_MATRIX, UPDATE_GAME_STATUS } from '../actions/types';\n\nconst initialState = {\n  matrix: [],\n  gameOver: false\n};\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case UPDATE_MATRIX:\n      return {\n        ...state,\n        matrix: action.payload\n      };\n    case UPDATE_GAME_STATUS:\n      return {\n        ...state,\n        gameOver: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport gameReducer from './gameReducer';\n\nexport default combineReducers({\n  game: gameReducer\n});\n","export const UPDATE_MATRIX = 'UPDATE_MATRIX';\nexport const UPDATE_GAME_STATUS = 'UPDATE_GAME_STATUS';\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()) || compose\n  )\n);\n\nexport default store;\n","import { UPDATE_MATRIX, UPDATE_GAME_STATUS } from './types';\n\nexport const updateMatrix = (content) => ({\n  type: UPDATE_MATRIX,\n  payload: content\n});\n\nexport const updateGameStatus = (status) => ({\n  type: UPDATE_GAME_STATUS,\n  payload: status\n});\n","import React from 'react';\n\nconst Icons = ({ name }) => {\n  return (\n    <img src={process.env.PUBLIC_URL + '/icons/' + name + '.svg'} alt=\"\" style={iconStyle} />\n  );\n}\n\nconst iconStyle = {\n  width: '24px'\n};\n\nexport default Icons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from './Icon';\n\nconst Actions = ({ showSettings, showStats, closeModal, displaySettings, displayStats }) => {\n  let iconClose = null;\n  if (showSettings || showStats) {\n    iconClose = (<Icon name=\"close\" />);\n    return (\n      <button onClick={closeModal} style={headerButtonStyle}>\n        {iconClose}\n      </button>\n    );\n  }\n  return (\n    <div style={actionsStyle}>\n      <button onClick={displaySettings} style={headerButtonStyle}>\n        <Icon name=\"settings\" />\n      </button>\n      <button onClick={displayStats} style={headerButtonStyle}>\n        <Icon name=\"chart\" />\n      </button>\n    </div>\n  );\n}\n\n// Prop types\nActions.propTypes = {\n  showSettings: PropTypes.bool.isRequired,\n  showStats: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  displaySettings: PropTypes.func.isRequired,\n  displayStats: PropTypes.func.isRequired\n};\n\n// Inline styling\nconst actionsStyle = {\n  display: 'flex'\n};\n\nconst headerButtonStyle = {\n  backgroundColor: 'transparent',\n  border: '0',\n  appearance: 'none',\n  padding: '8px 20px',\n  cursor: 'pointer',\n  display: 'block',\n  position: 'relative',\n  zIndex: '11',\n  marginTop: '30px'\n};\n\nexport default Actions;\n","import React from 'react';\n\nfunction Stats({ resetData }) {\n  const playedGames = JSON.parse(localStorage.getItem('played_games'));\n  let wonGames = {\n    value: 0,\n    percent: 0\n  },\n  lostGames = {\n    value: 0,\n    percent: 0\n  };\n  if (playedGames) {\n    wonGames = {\n      value: playedGames.won,\n      percent: Math.round(100 / (playedGames.won + playedGames.lost) * playedGames.won)\n    };\n    lostGames = {\n      value: playedGames.lost,\n      percent: Math.round(100 / (playedGames.won + playedGames.lost) * playedGames.lost)\n    };\n  }\n  return playedGames ? (\n    <div>\n      <div style={lineStyle}>\n        Total games:\n        <strong style={valueStyle}>{wonGames.value + lostGames.value}</strong>\n      </div>\n      <div style={lineStyle}>\n        Won games:\n        <strong style={valueStyle}>{wonGames.value}&nbsp;({wonGames.percent}%)</strong>\n      </div>\n      <div style={lineStyle}>\n        Lost games:\n        <strong style={valueStyle}>{lostGames.value}&nbsp;({lostGames.percent}%)</strong>\n      </div>\n      <button onClick={resetData} style={resetButtonStyle}>Reset data</button>\n    </div>\n  ) : (\n    <div>\n      <div style={lineStyle}>\n        No stats for the moment.\n      </div>\n    </div>\n  );\n}\n\nconst lineStyle = {\n  marginBottom: '10px',\n  textAlign: 'center'\n};\n\nconst valueStyle = {\n  display: 'block',\n  fontSize: '2.2rem'\n};\n\nconst resetButtonStyle = {\n  appearance: 'none',\n  display: 'block',\n  width: '100%',\n  border: '0',\n  backgroundColor: '#e74c3c',\n  padding: '10px 15px',\n  color: '#fff',\n  marginTop: '1rem',\n  fontSize: '1.4rem',\n  cursor: 'pointer'\n};\n\nexport default Stats;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from './Icon';\n\nfunction Modal({ children, showModal, closeModal }) {\n  const modalStyle = {\n    display: showModal ? 'block' : 'none',\n    fontSize: '1.6rem'\n  }\n  return (\n    <div style={modalStyle}>\n      <span style={modalOverlayStyle}></span>\n      <div style={contentModalStyle}>\n        {children}\n        <button style={buttonStyle} onClick={closeModal}><Icon name=\"check\" /></button>\n      </div>\n    </div>\n  );\n}\n\n// Prop types\nModal.propTypes = {\n  children: PropTypes.object.isRequired,\n  showModal: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired\n};\n\n// Inline styling\nconst modalOverlayStyle = {\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  right: '0',\n  bottom: '0',\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  zIndex: '10'\n};\n\nconst contentModalStyle = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  justifyContent: 'center',\n  backgroundColor: '#fff',\n  padding: '10px 15px',\n  borderRadius: '5px',\n  transform: 'translate(-50%, -50%)',\n  zIndex: '11'\n};\n\nconst buttonStyle = {\n  appearance: 'none',\n  display: 'block',\n  width: '100%',\n  border: '0',\n  backgroundColor: '#27ae60',\n  padding: '10px 15px',\n  color: '#fff',\n  marginTop: '1rem',\n  fontSize: '1.4rem',\n  cursor: 'pointer'\n};\n\nexport default Modal;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    this.props.handleChange(e);\n  }\n  render() {\n    return (\n      <div className=\"form\">\n        <label style={infoFormStyle}><span style={infoFormLabelStyle}>Rows:</span><input type=\"number\" pattern=\"\\d*\" name=\"nbRows\" value={this.props.nbRows} onChange={this.handleChange} style={inputStyle} /></label>\n        <label style={infoFormStyle}><span style={infoFormLabelStyle}>Columns:</span><input type=\"number\" pattern=\"\\d*\" name=\"nbColumns\" value={this.props.nbColumns} onChange={this.handleChange} style={inputStyle} /></label>\n        <label style={infoFormStyle}><span style={infoFormLabelStyle}>Bombs:</span><input type=\"number\" pattern=\"\\d*\" min=\"1\" max={Math.round((this.props.nbRows * this.props.nbColumns) - ((this.props.nbRows * this.props.nbColumns) / 100 * 50))} name=\"nbBombs\" value={this.props.nbBombs} onChange={this.handleChange} style={inputStyle} /></label>\n      </div>\n    );\n  }\n}\n\n// Prop types\nForm.propTypes = {\n  nbRows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  nbColumns: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  nbBombs: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n\n// Inline styling\nconst inputStyle = {\n  width: '50px',\n  padding: '5px 0',\n  border: '0',\n  appearance: 'none',\n  margin: '5px',\n  textAlign: 'center',\n  fontSize: '1.6rem',\n  backgroundColor: '#ecf0f1',\n  marginLeft: 'auto'\n};\n\nconst infoFormStyle = {\n  display: 'flex',\n  alignItems: 'center'\n};\n\nconst infoFormLabelStyle = {\n  marginRight: '1rem'\n};\n\nexport default Form;","import React from 'react';\n\nfunction GameOverlay({ gameOver, resetGame }) {\n  return !gameOver ? (\n    <div className=\"game-overlay\" style={gameOverlayStyle}>\n      <h2 style={h2Style}><span role=\"img\" aria-label=\"hurray\">🎉</span> YOU WIN <span role=\"img\" aria-label=\"hurray\">🎉</span></h2>\n      <button style={buttonStyle} onClick={resetGame}>Reset</button>\n    </div>\n  ) : (\n    <div className=\"game-overlay\" style={gameOverlayStyle}>\n      <h2 style={h2Style}><span role=\"img\" aria-label=\"kaboom\">💥</span> GAME OVER <span role=\"img\" aria-label=\"kaboom\">💥</span></h2>\n      <button style={buttonStyle} onClick={resetGame}>Reset</button>\n    </div>\n  )\n}\n\n// Inline styling\nconst gameOverlayStyle = {\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  right: '0',\n  bottom: '0',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)',\n  zIndex: '20'\n};\n\nconst h2Style = {\n  width: '100%',\n  backgroundColor: '#0a3d62',\n  color: '#fff',\n  padding: '10px 15px',\n  marginBottom: '20px',\n  textAlign: 'center',\n  flex: '0'\n};\n\nconst buttonStyle = {\n  fontSize: '2.2rem',\n  appearance: 'none',\n  marginBottom: '40px',\n  padding: '10px 15px',\n  backgroundColor: '#0a3d62',\n  color: '#fff',\n  border: '0',\n  cursor: 'pointer',\n  borderRadius: '5px'\n};\n\nexport default GameOverlay;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateMatrix, updateGameStatus } from '../actions/gameActions';\n\nclass TableCell extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      animated: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.handleButtonRelease = this.handleButtonRelease.bind(this);\n  }\n  handleClick(e) {\n    e.preventDefault();\n    const { coords, infos } = this.props;\n    if (e.type === 'click' && !infos.marked) {\n      // Detect if left click and the cell not marked\n      // Display the content of the tile\n      this.showTile(coords);\n      // If it's a bomb, end the game\n      if (infos.bomb) {\n        this.displayAll();\n        this.props.updateGameStatus(true);\n        // Add a losed game in local storage\n        let playedGames = JSON.parse(localStorage.getItem('played_games'));\n        if (playedGames) {\n          ++playedGames.lost;\n        } else {\n          playedGames = {\n            won: 0,\n            lost: 1\n          };\n        }\n        localStorage.setItem('played_games', JSON.stringify(playedGames));\n      }\n    } else if (e.type === 'contextmenu') {\n      // Detect if right click to toggle flag mark on cell\n      this.toggleMarkTile(coords);\n    }\n  }\n  handleButtonPress() {\n    const { coords } = this.props;\n    this.buttonPressTimer = setTimeout(() => this.toggleMarkTile(coords), 600);\n  }\n  handleButtonRelease() {\n    clearTimeout(this.buttonPressTimer);\n  }\n  displayAll() {\n    console.log('ici');\n    const matrix = this.props.matrix.map((r) => {\n      return r.map((c) => {\n        c.showed = true;\n        return c;\n      });\n    });\n    // Update the matrix in store\n    this.props.updateMatrix(matrix);\n  }\n  showTile(coords) {\n    let nbLeftTiles = 0;\n    const matrix = this.props.matrix.map((r, rowIndex) => {\n      return r.map((c, colIndex) => {\n        if (rowIndex === coords[0] && colIndex === coords[1]) {\n          c.marked = false;\n          c.showed = true;\n        }\n        if (!c.showed && !c.bomb) {\n          nbLeftTiles++\n        }\n        return c;\n      });\n    });\n    // Update the matrix in store\n    this.props.updateMatrix(matrix);\n    // If no more tile to discover and we don't have a game over, it's because the player has won the game so reveal all tiles\n    if (nbLeftTiles === 0 && !this.props.gameOver) {\n      this.displayAll();\n      // Add a won game in local storage\n      let playedGames = JSON.parse(localStorage.getItem('played_games'));\n      if (playedGames) {\n        ++playedGames.won;\n      } else {\n        playedGames = {\n          won: 1,\n          lost: 0\n        };\n      }\n      localStorage.setItem('played_games', JSON.stringify(playedGames));\n    }\n    // If we are on an empty cell, we'll check the cells around to display\n    if (matrix[coords[0]][coords[1]].counter === 0 && !matrix[coords[0]][coords[1]].bomb) {\n      if (matrix[coords[0] - 1] &&\n        matrix[coords[0] - 1][coords[1] - 1] &&\n        (matrix[coords[0] - 1][coords[1] - 1].counter === 0 || (matrix[coords[0] - 1][coords[1] - 1].counter !== 0 && matrix[coords[0]][coords[1]].counter === 0)) &&\n        !matrix[coords[0] - 1][coords[1] - 1].bomb &&\n        !matrix[coords[0] - 1][coords[1] - 1].showed &&\n        !matrix[coords[0] - 1][coords[1] - 1].marked) {\n        this.showTile([coords[0] - 1, coords[1] - 1]);\n      }\n      if (matrix[coords[0] - 1] &&\n        matrix[coords[0] - 1][coords[1]] &&\n        (matrix[coords[0] - 1][coords[1]].counter === 0 || (matrix[coords[0] - 1][coords[1]].counter !== 0 && matrix[coords[0]][coords[1]].counter === 0)) &&\n        !matrix[coords[0] - 1][coords[1]].bomb &&\n        !matrix[coords[0] - 1][coords[1]].showed &&\n        !matrix[coords[0] - 1][coords[1]].marked) {\n        this.showTile([coords[0] - 1, coords[1]]);\n      }\n      if (matrix[coords[0] - 1] &&\n        matrix[coords[0] - 1][coords[1] + 1] &&\n        (matrix[coords[0] - 1][coords[1] + 1].counter === 0 || (matrix[coords[0] - 1][coords[1] + 1].counter !== 0 && matrix[coords[0]][coords[1]].counter === 0)) &&\n        !matrix[coords[0] - 1][coords[1] + 1].bomb &&\n        !matrix[coords[0] - 1][coords[1] + 1].showed &&\n        !matrix[coords[0] - 1][coords[1] + 1].marked) {\n        this.showTile([coords[0] - 1, coords[1] + 1]);\n      }\n      if (matrix[coords[0]] &&\n        matrix[coords[0]][coords[1] - 1] &&\n        (matrix[coords[0]][coords[1] - 1].counter === 0 || (matrix[coords[0]][coords[1] - 1].counter !== 0 && matrix[coords[0]][coords[1]].counter === 0)) &&\n        !matrix[coords[0]][coords[1] - 1].bomb &&\n        !matrix[coords[0]][coords[1] - 1].showed &&\n        !matrix[coords[0]][coords[1] - 1].marked) {\n        this.showTile([coords[0], coords[1] - 1]);\n      }\n      if (matrix[coords[0]] &&\n        matrix[coords[0]][coords[1] + 1] &&\n        (matrix[coords[0]][coords[1] + 1].counter === 0 || (matrix[coords[0]][coords[1] + 1].counter !== 0 && matrix[coords[0]][coords[1]].counter === 0)) &&\n        !matrix[coords[0]][coords[1] + 1].bomb &&\n        !matrix[coords[0]][coords[1] + 1].showed &&\n        !matrix[coords[0]][coords[1] + 1].marked) {\n        this.showTile([coords[0], coords[1] + 1]);\n      }\n      if (matrix[coords[0] + 1] &&\n        matrix[coords[0] + 1][coords[1] - 1] &&\n        (matrix[coords[0] + 1][coords[1] - 1].counter === 0 || (matrix[coords[0] + 1][coords[1] - 1].counter !== 0 && matrix[coords[0]][coords[1]].counter === 0)) &&\n        !matrix[coords[0] + 1][coords[1] - 1].bomb &&\n        !matrix[coords[0] + 1][coords[1] - 1].showed &&\n        !matrix[coords[0] + 1][coords[1] - 1].marked) {\n        this.showTile([coords[0] + 1, coords[1] - 1]);\n      }\n      if (matrix[coords[0] + 1] &&\n        matrix[coords[0] + 1][coords[1]] &&\n        (matrix[coords[0] + 1][coords[1]].counter === 0 || (matrix[coords[0] + 1][coords[1]].counter !== 0 && matrix[coords[0]][coords[1]].counter === 0)) &&\n        !matrix[coords[0] + 1][coords[1]].bomb &&\n        !matrix[coords[0] + 1][coords[1]].showed &&\n        !matrix[coords[0] + 1][coords[1]].marked) {\n        this.showTile([coords[0] + 1, coords[1]]);\n      }\n      if (matrix[coords[0] + 1] &&\n        matrix[coords[0] + 1][coords[1] + 1] &&\n        (matrix[coords[0] + 1][coords[1] + 1].counter === 0 || (matrix[coords[0] + 1][coords[1] + 1].counter !== 0 && matrix[coords[0]][coords[1]].counter === 0)) &&\n        !matrix[coords[0] + 1][coords[1] + 1].bomb &&\n        !matrix[coords[0] + 1][coords[1] + 1].showed &&\n        !matrix[coords[0] + 1][coords[1] + 1].marked) {\n        this.showTile([coords[0] + 1, coords[1] + 1]);\n      }\n    }\n  }\n  toggleMarkTile(coords) {\n    const matrix = this.props.matrix.map((r, rowIndex) => {\n      return r.map((c, colIndex) => {\n        if (rowIndex === coords[0] && colIndex === coords[1]) {\n          c.marked = !c.marked;\n        }\n        return c;\n      });\n    });\n    this.props.updateMatrix(matrix);\n  }\n  getCellStyle() {\n    return {\n      fontSize: '3rem',\n      lineHeight: '48px',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      textAlign: 'center',\n      cursor: 'pointer',\n      userSelect: 'none',\n      border: '2px solid #0a3d62',\n      borderRadius: '8px',\n      backgroundColor: this.props.infos.showed ? '#fff' : this.props.infos.marked ? '#f39c12' : '#051e31'\n    };\n  }\n  render() {\n    const { bomb, counter, marked, showed, suggested } = this.props.infos;\n    const animatedClass = marked ? 'animated ' : '';\n    const suggestedClass = suggested && !showed ? 'suggested' : '';\n    return (<td\n      className=\"col\"\n      style={this.getCellStyle()}\n      onClick={this.handleClick}\n      onContextMenu={this.handleClick}\n      onTouchStart={this.handleButtonPress}\n      onTouchEnd={this.handleButtonRelease}\n      onMouseDown={this.handleButtonPress}\n      onMouseUp={this.handleButtonRelease}\n      onMouseLeave={this.handleButtonRelease}\n    >\n      <div className={animatedClass + suggestedClass}>{\n        // Put a flag if marked\n        marked ?\n          (<span role=\"img\" aria-label=\"flag\">🚩</span>)\n        // Put a bomb if showed and bomb on this cell\n        : bomb && showed ?\n          (<span role=\"img\" aria-label=\"bomb\">💣</span>)\n        // Put the number of nearest bombs\n        : counter && showed > 0 ?\n          counter\n        // Or just leave a blank\n        :\n          (<span role=\"img\" aria-label=\"flag\">🚩</span>)\n        }</div>\n    </td>);\n  }\n}\n\n// Prop types\nTableCell.propTypes = {\n  coords: PropTypes.array.isRequired,\n  infos: PropTypes.object.isRequired,\n  nbLeftTiles: PropTypes.number.isRequired,\n  matrix: PropTypes.array.isRequired,\n  gameOver: PropTypes.bool.isRequired\n};\n\n// Map store state and actions to current component\nconst mapStateToProps = (state) => ({\n  matrix: state.game.matrix,\n  gameOver: state.game.gameOver\n});\n\nconst mapDispatchToProps = {\n  updateMatrix,\n  updateGameStatus\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableCell);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from './TableCell';\n\nclass TableRow extends Component {\n  render() {\n    const tableCells = [];\n    const { row, columns, nbLeftTiles } = this.props;\n    // Loop on columns to generate cells in table\n    for (var i = 0; i < columns.length; i++) {\n      tableCells.push(<TableCell coords={[row, i]} infos={columns[i]} key={i} nbLeftTiles={nbLeftTiles} />);\n    }\n    return (\n      <tr className=\"row\" style={rowStyle}>\n        {tableCells}\n      </tr>\n    );\n  }\n}\n\n// Prop types\nTableRow.propTypes = {\n  columns: PropTypes.array.isRequired,\n  row: PropTypes.number.isRequired,\n  nbLeftTiles: PropTypes.number.isRequired\n};\n\n// Inline styling\nconst rowStyle = {\n  width: '100%'\n};\n\nexport default TableRow;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TableRow from './TableRow';\n\nclass Table extends Component {\n  render() {\n    const tableRows = [];\n    const { table, nbLeftTiles } = this.props;\n    // Loop on rows to generate them in table\n    for (var i = 0; i < table.length; i++) {\n      tableRows.push(<TableRow key={i} row={i} columns={table[i]} nbLeftTiles={nbLeftTiles} />);\n    }\n    return (\n      <div style={tableContainerStyle}>\n        <div className=\"remaining\" style={remainingStyle}>Remaining tiles: <strong>{nbLeftTiles}</strong></div>\n        <div className=\"scrollable-table\" style={scrollableTableStyle}>\n          <table style={tableStyle}>\n            <tbody>\n              {tableRows}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Prop types\nTable.propTypes = {\n  table: PropTypes.array.isRequired,\n  nbLeftTiles: PropTypes.number.isRequired\n};\n\n// Inline styling\nconst tableContainerStyle = {\n  flex: '1',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: '10px'\n};\n\nconst remainingStyle = {\n  color: '#fff'\n};\n\nconst scrollableTableStyle = {\n  maxWidth: '100%',\n  overflowX: 'scroll'\n};\n\nconst tableStyle = {\n  borderCollapse: 'collapse'\n};\n\nexport default Table;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateMatrix, updateGameStatus } from './actions/gameActions';\n\n// Components\nimport Actions from './components/Actions';\nimport Stats from './components/Stats';\nimport Modal from './components/Modal'\nimport Form from './components/Form'\nimport GameOverlay from './components/GameOverlay'\nimport Table from './components/Table'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // Default state\n    this.state = {\n      nbRows: 10,\n      nbColumns: 7,\n      nbBombs: 10,\n      showSettings: false,\n      showStats: false\n    };\n    // Bind this to all functions that use the state\n    this.handleChange = this.handleChange.bind(this);\n    this.resetBombs = this.resetBombs.bind(this);\n    this.nbLeftTiles = this.nbLeftTiles.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.displaySettings = this.displaySettings.bind(this);\n    this.displayStats = this.displayStats.bind(this);\n    this.resetData = this.resetData.bind(this);\n  }\n  handleChange(event) {\n    // If something is changed in one of the input in form, update the value in the state and reset the board\n    this.setState({ [event.target.name]: parseInt(event.target.value) > 0 ? parseInt(event.target.value) : 1 }, this.resetBombs);\n  }\n  reloadApp() {\n    window.location.reload(true);\n  }\n  resetData() {\n    localStorage.removeItem('played_games');\n    this.closeModal()\n  }\n  displaySettings() {\n    this.setState({\n      showStats: false,\n      showSettings: true\n    })\n  }\n  displayStats() {\n    this.setState({\n      showStats: true,\n      showSettings: false\n    })\n  }\n  closeModal() {\n    this.setState({\n      showStats: false,\n      showSettings: false\n    })\n  }\n  nbLeftTiles() {\n    let counter = 0;\n    this.props.matrix.map((r) => {\n      r.map((c) => {\n        if (!c.showed && !c.bomb) {\n          counter++\n        }\n        return c;\n      })\n      return r;\n    });\n    return counter;\n  }\n  resetBombs() {\n    let bombsCoords = [];\n    let nbBombs = this.state.nbBombs;\n    const maxAuthorizedBombs = Math.round((this.state.nbRows * this.state.nbColumns) - ((this.state.nbRows * this.state.nbColumns) / 100 * 50));\n    if (this.state.nbBombs > maxAuthorizedBombs) {\n      this.setState({\n        nbBombs: maxAuthorizedBombs\n      });\n      nbBombs = maxAuthorizedBombs;\n    }\n    for (let i = 0; i < nbBombs; i++) {\n      let found = true;\n      var coords = [Math.floor(Math.random() * Math.floor(this.state.nbRows)), Math.floor(Math.random() * Math.floor(this.state.nbColumns))];\n      while (found) {\n        // eslint-disable-next-line\n        found = bombsCoords.filter((bc) => { return bc[0] === coords[0] && bc[1] === coords[1] }).length > 0\n        if (!found) {\n          bombsCoords.push([coords[0], coords[1]]);\n        } else {\n          coords = [Math.floor(Math.random() * Math.floor(this.state.nbRows)), Math.floor(Math.random() * Math.floor(this.state.nbColumns))];\n        }\n      }\n    }\n    let matrix = [];\n    for (let i = 0; i < this.state.nbRows; i++) {\n      let row = [];\n      for (let j = 0; j < this.state.nbColumns; j++) {\n        row.push({\n          showed: false,\n          bomb: false,\n          counter: 0,\n          marked: false\n        });\n      }\n      matrix.push(row);\n    }\n    bombsCoords.map((bc) => {\n      matrix[bc[0]][bc[1]].bomb = true;\n      return bc;\n    });\n    const suggestedTiles = [];\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        let counter = 0;\n        bombsCoords.map((bc) => {\n          if (bc[0] === i - 1 && bc[1] === j - 1) { counter++ }\n          if (bc[0] === i - 1 && bc[1] === j) { counter++ }\n          if (bc[0] === i - 1 && bc[1] === j + 1) { counter++ }\n          if (bc[0] === i && bc[1] === j - 1) { counter++ }\n          if (bc[0] === i && bc[1] === j + 1) { counter++ }\n          if (bc[0] === i + 1 && bc[1] === j - 1) { counter++ }\n          if (bc[0] === i + 1 && bc[1] === j) { counter++ }\n          if (bc[0] === i + 1 && bc[1] === j + 1) { counter++ }\n          return bc;\n        });\n        matrix[i][j].counter = counter;\n        if (counter === 0 && !matrix[i][j].bomb) {\n          suggestedTiles.push([i, j]);\n        }\n      }\n    }\n    if (suggestedTiles.length > 0) {\n      const selectedSuggestedTile = suggestedTiles[Math.floor(Math.random() * Math.floor(suggestedTiles.length))];\n      matrix[selectedSuggestedTile[0]][selectedSuggestedTile[1]].suggested = true;\n    }\n    this.props.updateGameStatus(false);\n    // Update the matrix in store\n    this.props.updateMatrix(matrix);\n  }\n  componentDidMount() {\n    // Reset the matrix at the beginning\n    this.resetBombs();\n  }\n  render() {\n    let gameOverlay = null;\n    // If game status is game over, display the game over overlay\n    // Or if game status is not game over and no more tile to discover, display the win overlay\n    if (this.props.gameOver || (this.nbLeftTiles() <= 0 && !this.props.gameOver)) {\n      gameOverlay = (<GameOverlay gameOver={this.props.gameOver} resetGame={this.resetBombs} />)\n    }\n    return (\n      <div className=\"App\" style={appStyle}>\n        <Actions showSettings={this.state.showSettings} showStats={this.state.showStats} closeModal={this.closeModal} displaySettings={this.displaySettings} displayStats={this.displayStats} />\n        <Modal showModal={this.state.showStats} closeModal={this.closeModal}>\n          <Stats resetData={this.resetData} />\n        </Modal>\n        <Modal showModal={this.state.showSettings} closeModal={this.closeModal}>\n          <Form handleChange={this.handleChange} nbRows={this.state.nbRows} nbColumns={this.state.nbColumns} nbBombs={this.state.nbBombs} />\n        </Modal>\n        {gameOverlay}\n        <Table table={this.props.matrix} nbLeftTiles={this.nbLeftTiles()} />\n        <a href=\"https://thewebsdoor.com\" target=\"_blank\" rel=\"noopener noreferrer\" style={linkStyle}>The Web's Door</a>\n        <div id=\"notification\" onClick={() => this.reloadApp()}>New update available, click on this message to load it.</div>\n      </div>\n    );\n  }\n}\n\n// Map store state and actions to current component\nconst mapStateToProps = (state) => ({\n  matrix: state.game.matrix,\n  gameOver: state.game.gameOver\n});\n\nconst mapDispatchToProps = {\n  updateMatrix,\n  updateGameStatus\n};\n\n// Inline styling\nconst appStyle = {\n  height: '100vh',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n};\n\nconst linkStyle = {\n  fontSize: '1.4rem',\n  color: '#fff',\n  marginBottom: '20px'\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  new Promise(function (resolve, reject) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n\n                resolve(true);\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }).then(() => {\n    document.getElementById('notification').className = 'show';\n  });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport './assets/stylesheets/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nserviceWorker.register();\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}